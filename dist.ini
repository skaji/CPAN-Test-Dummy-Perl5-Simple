; almost copy from Milla
[NameFromDirectory]

[Git::GatherDir]
exclude_filename = META.json
exclude_filename = LICENSE

[CopyFilesFromBuild]
copy = META.json
copy = LICENSE

[VersionFromMainModule]

[LicenseFromModule]
override_author = 1

[ReversionOnRelease]
prompt = 1

[NextRelease]
format = %v  %{yyyy-MM-dd HH:mm:ss VVV}d

[Git::Check]
allow_dirty = dist.ini
allow_dirty = Changes
allow_dirty = META.json
allow_dirty = README.md

[GithubMeta]
issues = 1

[ReadmeAnyFromPod]
type = markdown
filename = README.md
location = root

[MetaNoIndex]
directory = t

[Prereqs::FromCPANfile]

[MetaJSON]

[Git::Contributors]

[License]

[ReadmeAnyFromPod/ReadmeTextInBuild]

[ExecDir]
dir = script

[ShareDir]

; [Manifest]

; [ManifestSkip]

[CheckChangesHasContent]

[TestRelease]

[ConfirmRelease]

[UploadToCPAN]
[CopyFilesFromRelease]
match = \.pm$

[Git::Commit]
commit_msg = %v
allow_dirty = dist.ini
allow_dirty = Changes
allow_dirty = META.json
allow_dirty = README.md
allow_dirty_match => \.pm$

[Git::Tag]
tag_format = %v
tag_message = ""

[Git::Push]
remotes_must_exist = 0


; additional stuff
[Metadata]
x_static_install = 1

[GitHubREADME::Badge]
badges = travis

[MetaProvides::Package]

[PruneFiles]
filename = dist.ini
filename = cpanfile
